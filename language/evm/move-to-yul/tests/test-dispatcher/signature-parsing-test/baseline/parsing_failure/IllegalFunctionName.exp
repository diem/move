/* =======================================
 * Generated by Move-To-Yul compiler v0.0
 * ======================================= */


object "A2_M" {
    code {
        codecopy(0, dataoffset("A2_M_deployed"), datasize("A2_M_deployed"))
        return(0, datasize("A2_M_deployed"))
    }
    object "A2_M_deployed" {
        code {
            mstore(0, memoryguard(160))
            if iszero(lt(calldatasize(), 4))
            {
                let selector := $Shr(calldataload(0), 224)
                switch selector
                case 0x013044ef
                {
                    // illegal_char()
                    if callvalue()
                    {
                        $Abort(99)
                    }
                    A2_M_illegal_char()
                    let memPos := mload(0)
                    let memEnd := abi_encode_tuple__(memPos)
                    return(memPos, sub(memEnd, memPos))
                }
                case 0x7561eadc
                {
                    // illegal_char_begin()
                    if callvalue()
                    {
                        $Abort(99)
                    }
                    A2_M_illegal_char_begin()
                    let memPos := mload(0)
                    let memEnd := abi_encode_tuple__(memPos)
                    return(memPos, sub(memEnd, memPos))
                }
                default {}
            }
            $Abort(97)
            function A2_M_illegal_char() {
                // return ()
            }

            function A2_M_illegal_char_begin() {
                // return ()
            }

            function abi_encode_tuple__(headStart ) -> tail {
                tail := add(headStart, 0)
            }
            function $Abort(code) {
                mstore(0, code)
                revert(24, 8) // TODO: store code as a string?
            }
            function $Shr(x, y) -> r {
                r := shr(y, x)
            }
        }
    }
}


!! Move-To-Yul Diagnostics:
 error: error happens when parsing the signature
   ┌─ tests/test-dispatcher/signature-parsing-test/baseline/parsing_failure/IllegalFunctionName.move:9:5
   │
 9 │ ╭     fun illegal_char() {
10 │ │
11 │ │     }
   │ ╰─────^

error: error happens when parsing the signature
  ┌─ tests/test-dispatcher/signature-parsing-test/baseline/parsing_failure/IllegalFunctionName.move:5:5
  │
5 │ ╭     fun illegal_char_begin() {
6 │ │     }
  │ ╰─────^
